@model ChangePasswordViewModel
@{
    ViewData["Title"] = "ƒê·ªïi m·∫≠t kh·∫©u";
}

@section Styles {
    <style>
        /* University Library Change Password Styles */
        .change-password-container {
            min-height: 100vh;
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            padding: 2rem 0;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        .change-password-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            border: 1px solid #e2e8f0;
        }

        .change-password-header {
            background: linear-gradient(135deg, #2563eb 0%, #1e3a8a 100%);
            color: white;
            padding: 2.5rem 2rem;
            text-align: center;
            position: relative;
        }

        .change-password-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
            opacity: 0.1;
        }

        .change-password-title {
            font-size: 1.75rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            position: relative;
            z-index: 2;
        }

        .change-password-subtitle {
            opacity: 0.9;
            position: relative;
            z-index: 2;
        }

        .change-password-body {
            padding: 2.5rem;
        }

        .security-notice {
            background: linear-gradient(135deg, #fef3cd 0%, #fff3cd 100%);
            border: 1px solid #ffeaa7;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            position: relative;
        }

        .security-notice h6 {
            color: #856404;
            font-weight: 700;
            margin-bottom: 0.75rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .security-notice ul {
            color: #856404;
            margin: 0;
            padding-left: 1.25rem;
        }

        .security-notice li {
            margin-bottom: 0.25rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        .form-label {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: #374151;
            margin-bottom: 0.75rem;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .form-label i {
            color: #2563eb;
            width: 16px;
        }

        .password-input-group {
            position: relative;
        }

        .form-control {
            border: 2px solid #e2e8f0;
            border-radius: 10px;
            padding: 0.75rem 3rem 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f8fafc;
            width: 100%;
        }

        .form-control:focus {
            border-color: #2563eb;
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
            background: white;
        }

        .form-control.is-invalid {
            border-color: #dc3545;
        }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #6b7280;
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 4px;
            transition: color 0.2s ease;
            font-size: 1.2rem;
            user-select: none;
        }

        .password-toggle:hover {
            color: #2563eb;
        }

        .invalid-feedback {
            display: block;
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        .btn-change-password {
            background: linear-gradient(135deg, #2563eb 0%, #1e3a8a 100%);
            color: white;
            border: none;
            padding: 0.875rem 2rem;
            border-radius: 10px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            width: 100%;
            justify-content: center;
        }

        .btn-change-password:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(37, 99, 235, 0.3);
            color: white;
        }

        .btn-cancel {
            background: #6b7280;
            color: white;
            border: none;
            padding: 0.875rem 2rem;
            border-radius: 10px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            text-decoration: none;
            width: 100%;
            justify-content: center;
            margin-top: 1rem;
        }

        .btn-cancel:hover {
            background: #4b5563;
            transform: translateY(-2px);
            color: white;
            text-decoration: none;
        }

        .alert {
            border-radius: 10px;
            border: none;
            padding: 1rem 1.5rem;
            margin-bottom: 1.5rem;
        }

        .alert-success {
            background: linear-gradient(135deg, #ecfdf5 0%, #d1fae5 100%);
            color: #047857;
            border-left: 4px solid #10b981;
        }

        .alert-danger {
            background: linear-gradient(135deg, #fef2f2 0%, #fecaca 100%);
            color: #dc2626;
            border-left: 4px solid #ef4444;
        }
    </style>
}

<div class="change-password-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5">
                @* Success messages should be shown on Profile page after redirect *@
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    </div>
                }

                <div class="change-password-card">
                    <div class="change-password-header">
                        <h2 class="change-password-title">
                            <i class="fas fa-key me-2"></i>ƒê·ªïi m·∫≠t kh·∫©u
                        </h2>
                        <p class="change-password-subtitle">C·∫≠p nh·∫≠t m·∫≠t kh·∫©u ƒë·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n</p>
                    </div>

                    <div class="change-password-body">
                        <div class="security-notice">
                            <h6><i class="fas fa-shield-alt"></i>L∆∞u √Ω b·∫£o m·∫≠t</h6>
                            <ul>
                                <li>M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±</li>
                                <li>Bao g·ªìm ch·ªØ hoa, ch·ªØ th∆∞·ªùng v√† s·ªë</li>
                                <li>Kh√¥ng s·ª≠ d·ª•ng th√¥ng tin c√° nh√¢n d·ªÖ ƒëo√°n</li>
                                <li>Thay ƒë·ªïi m·∫≠t kh·∫©u ƒë·ªãnh k·ª≥ ƒë·ªÉ tƒÉng c∆∞·ªùng b·∫£o m·∫≠t</li>
                            </ul>
                        </div>

                        <form asp-action="ChangePassword" method="post">
                            @* Only show validation errors, not success messages *@
                            @if (ViewData.ModelState.ErrorCount > 0)
                            {
                                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                            }

                            <div class="form-group">
                                <label asp-for="CurrentPassword" class="form-label">
                                    <i class="fas fa-lock"></i>M·∫≠t kh·∫©u hi·ªán t·∫°i
                                </label>
                                <div class="password-input-group">
                                    <input asp-for="CurrentPassword" type="password" class="form-control"
                                        placeholder="Nh·∫≠p m·∫≠t kh·∫©u hi·ªán t·∫°i" autocomplete="current-password" />
                                    <span class="password-toggle" onclick="togglePassword('CurrentPassword')">
                                        üîí
                                    </span>
                                </div>
                                <span asp-validation-for="CurrentPassword" class="invalid-feedback"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="NewPassword" class="form-label">
                                    <i class="fas fa-key"></i>M·∫≠t kh·∫©u m·ªõi
                                </label>
                                <div class="password-input-group">
                                    <input asp-for="NewPassword" type="password" class="form-control"
                                        placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi" autocomplete="new-password" />
                                    <span class="password-toggle" onclick="togglePassword('NewPassword')">
                                        üîí
                                    </span>
                                </div>
                                <span asp-validation-for="NewPassword" class="invalid-feedback"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="ConfirmPassword" class="form-label">
                                    <i class="fas fa-check-double"></i>X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi
                                </label>
                                <div class="password-input-group">
                                    <input asp-for="ConfirmPassword" type="password" class="form-control"
                                        placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi" autocomplete="new-password" />
                                    <span class="password-toggle" onclick="togglePassword('ConfirmPassword')">
                                        üîí
                                    </span>
                                </div>
                                <span asp-validation-for="ConfirmPassword" class="invalid-feedback"></span>
                            </div>

                            <button type="submit" class="btn-change-password">
                                <i class="fas fa-save me-2"></i>C·∫≠p nh·∫≠t m·∫≠t kh·∫©u
                            </button>

                            <a asp-action="Profile" class="btn-cancel">
                                <i class="fas fa-arrow-left me-2"></i>Quay l·∫°i h·ªì s∆°
                            </a>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function togglePassword(fieldId) {
            const field = document.getElementById(fieldId);
            const toggle = field.nextElementSibling;

            if (field.type === 'password') {
                field.type = 'text';
                toggle.textContent = 'üîì';
            } else {
                field.type = 'password';
                toggle.textContent = 'üîí';
            }
        }

        // Auto-dismiss alerts after 5 seconds
        setTimeout(function () {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                alert.style.transition = 'opacity 0.5s ease';
                alert.style.opacity = '0';
                setTimeout(() => alert.remove(), 500);
            });
        }, 5000);

        // Form validation enhancements
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            const inputs = form.querySelectorAll('input[type="password"]');

            inputs.forEach(input => {
                input.addEventListener('blur', function () {
                    if (this.value && !this.checkValidity()) {
                        this.classList.add('is-invalid');
                    } else {
                        this.classList.remove('is-invalid');
                    }
                });

                input.addEventListener('input', function () {
                    this.classList.remove('is-invalid');
                });
            });
        });
    </script>
}