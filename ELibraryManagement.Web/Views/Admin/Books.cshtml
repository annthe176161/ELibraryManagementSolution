@model List<AdminBookViewModel>

@{
    ViewData["Title"] = "Quản lý sách - E-Library";
    Layout = "_AdminLayout";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex align-items-center justify-content-between">
            <div>
                <h2 class="h3 mb-0">
                    <i class="fas fa-book me-2 text-success"></i>
                    Quản lý sách
                </h2>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-action="Index">Quản trị</a>
                        </li>
                        <li class="breadcrumb-item active">Sách</li>
                    </ol>
                </nav>
            </div>
            <div>
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#bookModal"
                    onclick="openCreateBookModal()">
                    <i class="fas fa-plus me-1"></i>
                    Thêm sách mới
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Statistics Row -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <div class="small">Tổng số sách</div>
                        <div class="h4 mb-0">@Model.Sum(b => b.TotalQuantity)</div>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-book fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <div class="small">Có sẵn</div>
                        <div class="h4 mb-0">@Model.Sum(b => b.AvailableQuantity)</div>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <div class="small">Đang được mượn</div>
                        <div class="h4 mb-0">@Model.Sum(b => b.BorrowedQuantity)</div>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-hand-holding fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-danger text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <div class="small">Hết sách</div>
                        <div class="h4 mb-0">@Model.Count(b => b.AvailableQuantity == 0)</div>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Books Table -->
<div class="row">
    <div class="col-12">
        <div class="card shadow">
            <div class="card-header bg-light">
                <div class="d-flex align-items-center justify-content-between">
                    <h5 class="mb-0">Danh sách sách</h5>
                    <div class="d-flex">
                        <div class="input-group input-group-sm me-3" style="width: 300px;">
                            <input type="text" class="form-control" placeholder="Tìm kiếm sách..." id="searchInput">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <select class="form-select form-select-sm" id="statusFilter" style="width: 150px;">
                            <option value="">Tất cả trạng thái</option>
                            <option value="available">Có sẵn</option>
                            <option value="borrowed">Đang mượn</option>
                            <option value="outofstock">Hết sách</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="booksTable">
                        <thead class="table-light">
                            <tr>
                                <th scope="col">Sách</th>
                                <th scope="col">Tác giả</th>
                                <th scope="col">Thể loại</th>
                                <th scope="col">ISBN</th>
                                <th scope="col">Tình trạng</th>
                                <th scope="col">Số lượng</th>
                                <th scope="col">Đánh giá</th>
                                <th scope="col">Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var book in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="book-cover me-3" style="width: 60px; height: 80px;">
                                                @if (!string.IsNullOrEmpty(book.ImageUrl))
                                                {
                                                    <img src="@book.ImageUrl" alt="@book.Title" class="rounded w-100 h-100"
                                                        style="object-fit: cover;"
                                                        onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                                    <div class="bg-secondary rounded d-none align-items-center justify-content-center text-white w-100 h-100"
                                                        style="font-size: 12px;">
                                                        <i class="fas fa-book"></i>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="bg-secondary rounded d-flex align-items-center justify-content-center text-white w-100 h-100"
                                                        style="font-size: 12px;">
                                                        <i class="fas fa-book"></i>
                                                    </div>
                                                }
                                            </div>
                                            <div>
                                                <h6 class="mb-1">@book.Title</h6>
                                                <small class="text-muted">@(string.IsNullOrEmpty(book.Description) ? "" :
                                                                                                    (book.Description.Length > 50 ? book.Description.Substring(0, 50) +
                                                                                                    "..." : book.Description))</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@book.Author</td>
                                    <td>
                                        @if (book.Categories != null && book.Categories.Any())
                                        {
                                            @foreach (var category in book.Categories.Take(2))
                                            {
                                                <span class="badge bg-primary me-1">@category.Name</span>
                                            }
                                            @if (book.Categories.Count > 2)
                                            {
                                                <small class="text-muted">+@(book.Categories.Count - 2)</small>
                                            }
                                        }
                                        else if (!string.IsNullOrEmpty(book.CategoryNames))
                                        {
                                            <span class="badge bg-primary">@book.CategoryNames</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Chưa phân loại</span>
                                        }
                                    </td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(book.ISBN))
                                        {
                                            <code>@book.ISBN</code>
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        @if (book.TotalQuantity == 0)
                                        {
                                            <span class="badge bg-danger">Hết sách</span>
                                        }
                                        else if (book.AvailableQuantity > 0)
                                        {
                                            <span class="badge bg-success">Có sẵn</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">Đang mượn</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="d-flex flex-column">
                                            <small><strong>Có sẵn:</strong> @book.AvailableQuantity</small>
                                            <small><strong>Tổng:</strong> @book.TotalQuantity</small>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="me-2">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    @if (i <= Math.Floor(book.AverageRating))
                                                    {
                                                        <i class="fas fa-star text-warning"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star text-muted"></i>
                                                    }
                                                }
                                            </div>
                                            <small class="text-muted">(@book.RatingCount)</small>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-primary view-book-btn"
                                                title="Xem chi tiết" data-book-id="@book.Id">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-warning" title="Chỉnh sửa"
                                                data-bs-toggle="modal" data-bs-target="#bookModal"
                                                onclick="editBook(@book.Id)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button type="button" class="btn btn-sm btn-outline-danger" title="Xóa"
                                                onclick="deleteBook(@book.Id, '@book.Title')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <small class="text-muted">
                        Hiển thị @Model.Count sách
                    </small>
                    <nav>
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item disabled">
                                <span class="page-link">Trước</span>
                            </li>
                            <li class="page-item active">
                                <span class="page-link">1</span>
                            </li>
                            <li class="page-item disabled">
                                <span class="page-link">Sau</span>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Book Modal (Create/Edit) -->
<div class="modal fade" id="bookModal" tabindex="-1" aria-labelledby="bookModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookModalLabel">Thêm sách mới</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="bookForm">
                    <input type="hidden" id="bookId" name="id" />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="title" class="form-label">Tiêu đề <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="title" name="title" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="author" class="form-label">Tác giả <span
                                        class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="author" name="author" required>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="isbn" class="form-label">ISBN</label>
                                <input type="text" class="form-control" id="isbn" name="isbn" maxlength="13"
                                    placeholder="Tối đa 13 ký tự">
                                <small class="form-text text-muted">Ví dụ: 9786047770560</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="publisher" class="form-label">Nhà xuất bản</label>
                                <input type="text" class="form-control" id="publisher" name="publisher">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="publicationYear" class="form-label">Năm xuất bản</label>
                                <input type="number" class="form-control" id="publicationYear" name="publicationYear"
                                    min="1000" max="2100" value="2025">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="quantity" class="form-label">Số lượng <span
                                        class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="quantity" name="quantity" min="0"
                                    required>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="mb-3">
                                <label for="pageCount" class="form-label">Số trang</label>
                                <input type="number" class="form-control" id="pageCount" name="pageCount" min="0">
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="language" class="form-label">Ngôn ngữ</label>
                                <input type="text" class="form-control" id="language" name="language"
                                    value="Tiếng Việt">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="categories" class="form-label">Danh mục</label>
                                <select class="form-select" id="categories" name="categoryIds" multiple>
                                    <!-- Categories will be loaded dynamically -->
                                </select>
                                <small class="form-text text-muted">Giữ Ctrl để chọn nhiều danh mục</small>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="coverImageUrl" class="form-label">Hình bìa sách</label>
                        <div class="row">
                            <div class="col-md-8">
                                <input type="url" class="form-control" id="coverImageUrl" name="coverImageUrl"
                                    placeholder="https://res.cloudinary.com/demo/image/upload/sample.jpg">
                            </div>
                            <div class="col-md-4">
                                <div class="input-group">
                                    <input type="file" class="form-control" id="imageFile" accept="image/*"
                                        onchange="handleBookImageUpload(this)">
                                    <button class="btn btn-outline-secondary" type="button"
                                        onclick="triggerImageUpload()" disabled id="uploadBtn">
                                        <i class="fas fa-upload"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                        <small class="form-text text-muted">Bạn có thể nhập URL hoặc upload file ảnh (tự động upload khi
                            chọn file)</small>
                        <div class="mt-2">
                            <img id="imagePreview" src="" alt="Preview"
                                style="max-width: 150px; max-height: 200px; display: none;" class="img-thumbnail">
                        </div>
                        <div id="uploadProgress" class="mt-2" style="display: none;">
                            <div class="progress">
                                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar"
                                    style="width: 0%"></div>
                            </div>
                            <small class="text-muted">Đang tải lên...</small>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">Mô tả</label>
                        <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" id="saveBookBtn" onclick="saveBook()">
                    <i class="fas fa-save me-1"></i>
                    Lưu
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa sách này không?</p>
                <div id="deleteDetails"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Xóa</button>
            </div>
        </div>
    </div>
</div>

<!-- Book Detail Modal -->
<div class="modal fade" id="bookDetailModal" tabindex="-1" aria-labelledby="bookDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <!-- Content will be loaded dynamically -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentBookId = null;
        let categories = [];

        // Error handling
        window.onerror = function (msg, url, lineNo, columnNo, error) {
            console.error('JavaScript Error:', msg, 'at', url, ':', lineNo, ':', columnNo, error);
            return false;
        };

        $(document).ready(function () {
            console.log('Document ready, loading categories...');

            // View book detail button event listener
            $(document).on('click', '.view-book-btn', function () {
                const bookId = $(this).data('book-id');
                console.log('View book clicked for ID:', bookId);
                viewBook(bookId);
            });

            // Test modal functionality
            window.testModal = function () {
                $('#bookModalLabel').text('Test Modal');
                $('#bookModal').modal('show');
            };

            // Load categories for the form
            loadCategories().catch(err => {
                console.error('Error loading categories on ready:', err);
            });

            // Preview image when URL is entered
            $('#coverImageUrl').on('input', function () {
                const url = $(this).val();
                if (url && url.match(/\.(jpeg|jpg|gif|png|webp)$/i)) {
                    $('#imagePreview').attr('src', url).show();
                } else if (url) {
                    // Try to load the image anyway
                    $('#imagePreview').attr('src', url).show();
                } else {
                    $('#imagePreview').hide();
                }
            });

            // Search functionality
            $('#searchInput').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('#booksTable tbody tr').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Status filter
            $('#statusFilter').on('change', function () {
                var value = $(this).val();
                $('#booksTable tbody tr').filter(function () {
                    if (value === '') {
                        $(this).show();
                    } else {
                        var statusText = $(this).find('td:nth-child(5) .badge').text().toLowerCase();
                        if (value === 'available') {
                            $(this).toggle(statusText.indexOf('có sẵn') > -1);
                        } else if (value === 'borrowed') {
                            $(this).toggle(statusText.indexOf('đang mượn') > -1);
                        } else if (value === 'outofstock') {
                            $(this).toggle(statusText.indexOf('hết sách') > -1);
                        }
                    }
                });
            });
        });

        // Load categories for dropdown
        function loadCategories() {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: '/Admin/GetCategories',
                    type: 'GET',
                    success: function (response) {
                        console.log('Categories response:', response);
                        if (response.success && response.data) {
                            categories = response.data;
                            const categoriesSelect = $('#categories');
                            categoriesSelect.empty();

                            response.data.forEach(category => {
                                const optionText = category.isActive ? category.name : `${category.name} (Không hoạt động)`;
                                const option = new Option(optionText, category.id);
                                if (!category.isActive) {
                                    $(option).prop('disabled', true).addClass('text-muted');
                                }
                                categoriesSelect.append(option);
                            });

                            resolve();
                        } else {
                            console.error('Failed to load categories - invalid response:', response);
                            resolve(); // Still resolve to not break the chain
                        }
                    },
                    error: function (xhr) {
                        console.error('Error loading categories:', xhr);
                        console.error('Status:', xhr.status, 'Response:', xhr.responseText);
                        resolve(); // Still resolve to not break the chain
                    }
                });
            });
        }

        // Open modal for creating new book
        function openCreateBookModal() {
            try {
                console.log('openCreateBookModal called');
                currentBookId = null;
                $('#bookModalLabel').text('Thêm sách mới');
                $('#bookForm')[0].reset();
                $('#bookId').val('');
                $('#publicationYear').val(new Date().getFullYear());
                $('#language').val('Tiếng Việt');
                $('#categories').val([]);
                $('#imagePreview').hide();
                $('#coverImageUrl').val('');

                // Load categories async without blocking
                setTimeout(() => {
                    loadCategories().catch(err => {
                        console.error('Error loading categories:', err);
                    });
                }, 100);
            } catch (error) {
                console.error('Error in openCreateBookModal:', error);
                alert('Có lỗi xảy ra khi mở form thêm sách: ' + error.message);
            }
        }



        // Edit book from view modal
        let currentViewBookId = null;
        function editBookFromView() {
            $('#viewBookModal').modal('hide');
            setTimeout(() => {
                editBook(currentViewBookId);
                $('#bookModal').modal('show');
            }, 300);
        }

        // Handle image upload
        function handleImageUpload(input) {
            const file = input.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').attr('src', e.target.result).show();
                };
                reader.readAsDataURL(file);
            }
        }

        // Upload image to Cloudinary (placeholder function)
        function uploadImage() {
            const fileInput = document.getElementById('imageFile');
            const file = fileInput.files[0];

            if (!file) {
                alert('Vui lòng chọn file ảnh trước');
                return;
            }

            // For demo purposes, set some sample book cover URLs
            const sampleUrls = [
                'https://salt.tikicdn.com/cache/750x750/ts/product/5e/18/24/2a6154ba08df6ce6161c13f4303fa19e.jpg',
                'https://images-na.ssl-images-amazon.com/images/I/51-8VbtFFPL._SX330_BO1,204,203,200_.jpg',
                'https://m.media-amazon.com/images/I/71UypkUjStL._AC_UF1000,1000_QL80_.jpg',
                'https://product.hstatic.net/1000363117/product/image_195509_1_36793_34a84c4c9a9c442ebf1b56430aa4a1e5_master.jpg'
            ];

            const randomUrl = sampleUrls[Math.floor(Math.random() * sampleUrls.length)];
            $('#coverImageUrl').val(randomUrl);
            $('#imagePreview').attr('src', randomUrl).show();

            alert('Đã chọn ảnh mẫu! Trong thực tế, chức năng này sẽ upload lên Cloudinary.');

            // You could implement Cloudinary upload here:
            /*
            const formData = new FormData();
            formData.append('file', file);
            formData.append('upload_preset', 'your_upload_preset');
        
            fetch('https://api.cloudinary.com/v1_1/your_cloud_name/image/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                $('#coverImageUrl').val(data.secure_url);
                $('#imagePreview').attr('src', data.secure_url).show();
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi upload ảnh');
            });
            */
        }

        // Edit book
        function editBook(bookId) {
            try {
                console.log('editBook called with ID:', bookId);
                currentBookId = bookId;
                $('#bookModalLabel').text('Chỉnh sửa sách');

                // Reset form first
                $('#bookForm')[0].reset();
                $('#imagePreview').hide();

                // Load book details from API async
                setTimeout(() => {
                    loadBookForEdit(bookId);
                }, 100);
            } catch (error) {
                console.error('Error in editBook:', error);
                alert('Có lỗi xảy ra khi mở form chỉnh sửa: ' + error.message);
            }
        }

        // Load book details for editing
        function loadBookForEdit(bookId) {
            // Show loading
            $('#saveBookBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Đang tải...');

            $.ajax({
                url: '/Admin/GetBookDetail',
                type: 'GET',
                data: { id: bookId },
                success: function (response) {
                    if (response.success && response.data) {
                        const book = response.data;

                        // Populate form fields
                        $('#bookId').val(book.id || bookId);
                        $('#title').val(book.title || '');
                        $('#author').val(book.author || '');
                        $('#isbn').val(book.isbn || '');
                        $('#publisher').val(book.publisher || '');
                        $('#publicationYear').val(book.publicationYear || new Date().getFullYear());
                        $('#description').val(book.description || '');

                        // Handle image URL and preview
                        const imageUrl = book.imageUrl || book.coverImageUrl || '';
                        $('#coverImageUrl').val(imageUrl);
                        if (imageUrl && imageUrl.trim() !== '') {
                            $('#imagePreview').attr('src', imageUrl).show();
                        } else {
                            $('#imagePreview').hide();
                        }

                        $('#quantity').val(book.totalCopies || 0);
                        $('#language').val(book.language || 'Tiếng Việt');
                        $('#pageCount').val(book.pageCount || 0);

                        // Load categories and select the book's categories
                        loadCategories().then(() => {
                            if (book.categories && book.categories.length > 0) {
                                const categoryIds = book.categories.map(c => c.id.toString());
                                $('#categories').val(categoryIds);
                            } else {
                                $('#categories').val([]);
                            }
                        });
                    } else {
                        alert('Không thể tải thông tin sách: ' + (response.message || 'Lỗi không xác định'));
                    }
                },
                error: function (xhr) {
                    console.error('Error loading book details:', xhr);
                    alert('Có lỗi xảy ra khi tải thông tin sách');
                },
                complete: function () {
                    $('#saveBookBtn').prop('disabled', false).html('<i class="fas fa-save me-1"></i>Lưu');
                }
            });
        }

        // Save book (create or update)
        function saveBook() {
            const form = $('#bookForm')[0];
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            // Validate required fields
            const title = $('#title').val().trim();
            const author = $('#author').val().trim();
            const isbn = $('#isbn').val().trim();
            const quantity = parseInt($('#quantity').val()) || 0;

            if (!title) {
                alert('Vui lòng nhập tiêu đề sách');
                $('#title').focus();
                return;
            }

            if (!author) {
                alert('Vui lòng nhập tác giả');
                $('#author').focus();
                return;
            }

            if (isbn && isbn.length > 13) {
                alert('ISBN không được vượt quá 13 ký tự');
                $('#isbn').focus();
                return;
            }

            if (quantity < 0) {
                alert('Số lượng phải là số không âm');
                $('#quantity').focus();
                return;
            }

            const formData = {
                Id: parseInt($('#bookId').val()) || 0,
                Title: title,
                Author: author,
                ISBN: $('#isbn').val() || null,
                Publisher: $('#publisher').val() || null,
                PublicationYear: parseInt($('#publicationYear').val()) || new Date().getFullYear(),
                Description: $('#description').val() || null,
                CoverImageUrl: $('#coverImageUrl').val() || null,
                Quantity: quantity,
                Language: $('#language').val() || 'Tiếng Việt',
                PageCount: parseInt($('#pageCount').val()) || 0,
                CategoryIds: $('#categories').val() ? $('#categories').val().map(id => parseInt(id)) : []
            };

            console.log('Sending data:', formData); // Debug log
            console.log('CoverImageUrl value:', $('#coverImageUrl').val()); // Debug specific field

            const isEdit = currentBookId !== null && currentBookId > 0;
            const url = isEdit ? '/Admin/SaveBook' : '/Admin/SaveBook';

            $('#saveBookBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Đang lưu...');

            $.ajax({
                url: url,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (response) {
                    console.log('Response:', response); // Debug log
                    if (response.success) {
                        $('#bookModal').modal('hide');
                        alert(response.message);
                        location.reload(); // Reload page to show updated data
                    } else {
                        alert('Lỗi: ' + response.message);
                        if (response.errors) {
                            console.error('Validation errors:', response.errors);
                        }
                    }
                },
                error: function (xhr) {
                    console.error('Error:', xhr);
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        alert('Có lỗi xảy ra: ' + (errorResponse.message || 'Lỗi không xác định'));
                    } catch (e) {
                        alert('Có lỗi xảy ra khi lưu sách');
                    }
                },
                complete: function () {
                    $('#saveBookBtn').prop('disabled', false).html('<i class="fas fa-save me-1"></i>Lưu');
                }
            });
        }

        // Handle book image upload
        async function handleBookImageUpload(input) {
            const file = input.files[0];
            if (!file) return;

            // Validate file type
            const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
            if (!allowedTypes.includes(file.type)) {
                alert('Vui lòng chọn file ảnh hợp lệ (JPG, PNG, GIF, WebP)');
                input.value = '';
                return;
            }

            // Validate file size (5MB)
            if (file.size > 5 * 1024 * 1024) {
                alert('Kích thước file quá lớn. Vui lòng chọn file nhỏ hơn 5MB');
                input.value = '';
                return;
            }

            // Show preview
            const reader = new FileReader();
            reader.onload = function (e) {
                $('#imagePreview').attr('src', e.target.result).show();
            };
            reader.readAsDataURL(file);

            // Auto upload to server
            await uploadBookImage(file);
        }

        async function uploadBookImage(file) {
            try {
                $('#uploadProgress').show();
                $('.progress-bar').css('width', '50%');

                const formData = new FormData();
                formData.append('file', file);

                const response = await $.ajax({
                    url: '/Admin/UploadImage',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    timeout: 30000
                });

                $('.progress-bar').css('width', '100%');

                if (response.success && response.imageUrl) {
                    $('#coverImageUrl').val(response.imageUrl);
                    $('#imagePreview').attr('src', response.imageUrl).show();

                    // Show success message briefly
                    setTimeout(() => {
                        $('#uploadProgress').hide();
                        $('.progress-bar').css('width', '0%');
                    }, 1000);
                } else {
                    alert('Upload thất bại: ' + (response.message || 'Lỗi không xác định'));
                    $('#uploadProgress').hide();
                }
            } catch (error) {
                console.error('Upload error:', error);
                alert('Có lỗi xảy ra khi upload ảnh: ' + (error.responseJSON?.message || error.message || 'Lỗi không xác định'));
                $('#uploadProgress').hide();
            }
        }

        function triggerImageUpload() {
            $('#imageFile').click();
        }

        // Delete book
        function deleteBook(bookId, bookTitle) {
            $('#deleteDetails').html(`<strong>Sách:</strong> ${bookTitle}`);

            $('#confirmDeleteBtn').off('click').on('click', function () {
                $.ajax({
                    url: '/Admin/DeleteBook',
                    type: 'POST',
                    data: { id: bookId },
                    success: function (response) {
                        $('#deleteModal').modal('hide');
                        if (response.success) {
                            alert(response.message);
                            location.reload();
                        } else {
                            alert('Lỗi: ' + response.message);
                        }
                    },
                    error: function (xhr) {
                        $('#deleteModal').modal('hide');
                        console.error('Error:', xhr);
                        alert('Có lỗi xảy ra khi xóa sách');
                    }
                });
            });

            $('#deleteModal').modal('show');
        }

        // View book detail
        function viewBook(bookId) {
            console.log('viewBook function called with ID:', bookId);

            if (!bookId) {
                console.error('No book ID provided');
                alert('Lỗi: Không có ID sách');
                return;
            }

            console.log('Loading book detail modal...');
            $('#bookDetailModal .modal-content').html('<div class="modal-body text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Đang tải...</span></div></div>');
            $('#bookDetailModal').modal('show');

            console.log('Making AJAX request to:', '/Admin/BookDetail/' + bookId);
            $.ajax({
                url: '/Admin/BookDetail/' + bookId,
                type: 'GET',
                success: function (response) {
                    console.log('AJAX success, response received');
                    $('#bookDetailModal .modal-content').html(response);
                },
                error: function (xhr) {
                    console.error('AJAX Error:', xhr);
                    console.error('Status:', xhr.status);
                    console.error('Response Text:', xhr.responseText);
                    $('#bookDetailModal .modal-content').html(`
                            <div class="modal-header">
                                <h5 class="modal-title">Chi tiết sách</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div class="text-center py-4">
                                    <i class="fas fa-exclamation-triangle text-danger fa-3x mb-3"></i>
                                    <h5>Lỗi tải dữ liệu</h5>
                                    <p class="text-muted">Có lỗi xảy ra khi tải thông tin sách. Status: ${xhr.status}</p>
                                    <p class="text-muted">Chi tiết: ${xhr.responseText}</p>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                            </div>
                        `);
                }
            });
        }
    </script>
}