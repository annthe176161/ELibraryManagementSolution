@model List<BorrowRecordViewModel>

@{
    ViewData["Title"] = "Quản lý mượn sách - E-Library";
    Layout = "_AdminLayout";
}

<!-- Page Header -->
<div class="row mb-4">
    <div class="col-12">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <h2 class="h3 mb-0">
                        <i class="fas fa-clipboard-list me-2 text-info"></i>
                        Quản lý mượn sách
                    </h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item">
                                <a asp-action="Index">Quản trị</a>
                            </li>
                            <li class="breadcrumb-item active">Mượn sách</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Row -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small">Tổng lượt mượn</div>
                            <div class="h4 mb-0">@Model.Count</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-clipboard-list fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small">Đang mượn</div>
                            <div class="h4 mb-0">@Model.Count(b => !b.IsReturned)</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-hand-holding fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small">Quá hạn</div>
                            <div class="h4 mb-0">@Model.Count(b => b.IsOverdue)</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <div class="small">Đã trả</div>
                            <div class="h4 mb-0">@Model.Count(b => b.IsReturned)</div>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check-circle fa-2x opacity-75"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Borrow Records Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow">
                <div class="card-header bg-light">
                    <div class="d-flex align-items-center justify-content-between">
                        <h5 class="mb-0">Danh sách mượn sách</h5>
                        <div class="d-flex">
                            <div class="input-group input-group-sm me-3" style="width: 300px;">
                                <input type="text" class="form-control" placeholder="Tìm kiếm..." id="searchInput">
                                <button class="btn btn-outline-secondary" type="button">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                            <select class="form-select form-select-sm" id="statusFilter" style="width: 150px;">
                                <option value="">Tất cả trạng thái</option>
                                <option value="borrowed">Đang mượn</option>
                                <option value="overdue">Quá hạn</option>
                                <option value="returned">Đã trả</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="borrowsTable">
                            <thead class="table-light">
                                <tr>
                                    <th scope="col">Người mượn</th>
                                    <th scope="col">Sách</th>
                                    <th scope="col">Ngày mượn</th>
                                    <th scope="col">Hạn trả</th>
                                    <th scope="col">Ngày trả</th>
                                    <th scope="col">Trạng thái</th>
                                    <th scope="col">Phí thuê</th>
                                    <th scope="col">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var borrow in Model.OrderByDescending(b => b.BorrowDate))
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar avatar-sm me-2">
                                                    <i class="fas fa-user-circle fa-2x text-muted"></i>
                                                </div>
                                                <div>
                                                    <h6 class="mb-0">@borrow.UserName</h6>
                                                    <small class="text-muted">@borrow.UserEmail</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <div>
                                                <h6 class="mb-1">@borrow.BookTitle</h6>
                                                <small class="text-muted">@borrow.BookAuthor</small>
                                            </div>
                                        </td>
                                        <td>
                                            <small>@borrow.BorrowDate.ToString("dd/MM/yyyy")</small>
                                        </td>
                                        <td>
                                            <small class="@(borrow.IsOverdue ? "text-danger fw-bold" : "")">
                                                @borrow.DueDate.ToString("dd/MM/yyyy")
                                            </small>
                                        </td>
                                        <td>
                                            @if (borrow.ReturnDate.HasValue)
                                            {
                                                <small>@borrow.ReturnDate.Value.ToString("dd/MM/yyyy")</small>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Chưa trả</span>
                                            }
                                        </td>
                                        <td>
                                            @if (borrow.IsReturned)
                                            {
                                                <span class="badge bg-success">Đã trả</span>
                                            }
                                            else if (borrow.IsOverdue)
                                            {
                                                <span class="badge bg-danger">Quá hạn</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">Đang mượn</span>
                                            }
                                        </td>
                                        <td>
                                            @if (borrow.RentalPrice.HasValue)
                                            {
                                                <span class="fw-bold">@borrow.RentalPrice.Value.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Miễn phí</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-outline-primary" title="Xem chi tiết" onclick="viewBorrow(@borrow.Id)">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                                @if (!borrow.IsReturned)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-success" title="Xác nhận trả sách" onclick="returnBook(@borrow.Id, '@borrow.UserName', '@borrow.BookTitle')">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                }
                                                @if (borrow.IsOverdue && !borrow.IsReturned)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-warning" title="Gửi nhắc nhở" onclick="sendReminder(@borrow.Id, '@borrow.UserEmail')">
                                                        <i class="fas fa-bell"></i>
                                                    </button>
                                                }
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                                                        <i class="fas fa-cog"></i>
                                                    </button>
                                                    <ul class="dropdown-menu">
                                                        <li><a class="dropdown-item" href="#" onclick="extendDue(@borrow.Id)"><i class="fas fa-calendar-plus me-2"></i>Gia hạn</a></li>
                                                        <li><a class="dropdown-item" href="#" onclick="viewHistory(@borrow.UserId)"><i class="fas fa-history me-2"></i>Lịch sử mượn</a></li>
                                                        <li><hr class="dropdown-divider"></li>
                                                        <li><a class="dropdown-item text-warning" href="#" onclick="addFine(@borrow.Id)"><i class="fas fa-exclamation-triangle me-2"></i>Thêm phạt</a></li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer bg-light">
                    <div class="d-flex justify-content-between align-items-center">
                        <small class="text-muted">
                            Hiển thị @Model.Count giao dịch mượn
                        </small>
                        <nav>
                            <ul class="pagination pagination-sm mb-0">
                                <li class="page-item disabled">
                                    <span class="page-link">Trước</span>
                                </li>
                                <li class="page-item active">
                                    <span class="page-link">1</span>
                                </li>
                                <li class="page-item disabled">
                                    <span class="page-link">Sau</span>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Return Book Modal -->
<div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnModalLabel">Xác nhận trả sách</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Xác nhận người dùng đã trả sách?</p>
                <div id="returnDetails"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-success" id="confirmReturn">Xác nhận trả</button>
            </div>
        </div>
    </div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('keyup', function() {
                var value = $(this).val().toLowerCase();
                $('#borrowsTable tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Status filter
            $('#statusFilter').on('change', function() {
                var value = $(this).val();
                $('#borrowsTable tbody tr').filter(function() {
                    if (value === '') {
                        $(this).show();
                    } else {
                        var statusText = $(this).find('.badge').text().toLowerCase();
                        if (value === 'borrowed') {
                            $(this).toggle(statusText.indexOf('đang mượn') > -1);
                        } else if (value === 'overdue') {
                            $(this).toggle(statusText.indexOf('quá hạn') > -1);
                        } else if (value === 'returned') {
                            $(this).toggle(statusText.indexOf('đã trả') > -1);
                        }
                    }
                });
            });
        });

        function viewBorrow(borrowId) {
            // Implement view borrow functionality
            console.log('View borrow:', borrowId);
        }

        let borrowToReturn = null;

        function returnBook(borrowId, userName, bookTitle) {
            borrowToReturn = borrowId;
            $('#returnDetails').html(`
                <strong>Người mượn:</strong> ${userName}<br>
                <strong>Sách:</strong> ${bookTitle}
            `);
            $('#returnModal').modal('show');
        }

        $('#confirmReturn').on('click', function() {
            if (borrowToReturn) {
                // Implement return book functionality
                console.log('Return book:', borrowToReturn);
                // Here you would make an AJAX call to mark the book as returned
                // For now, just close the modal
                $('#returnModal').modal('hide');
                // Show success message
                alert('Sách đã được xác nhận trả thành công!');
                // Reload page to reflect changes
                location.reload();
            }
        });

        function sendReminder(borrowId, userEmail) {
            // Implement send reminder functionality
            console.log('Send reminder to:', userEmail, 'for borrow:', borrowId);
            alert('Đã gửi email nhắc nhở đến ' + userEmail);
        }

        function extendDue(borrowId) {
            // Implement extend due date functionality
            console.log('Extend due date for borrow:', borrowId);
            var newDate = prompt('Nhập ngày gia hạn mới (dd/mm/yyyy):');
            if (newDate) {
                alert('Đã gia hạn đến ngày ' + newDate);
            }
        }

        function viewHistory(userId) {
            // Implement view user borrow history
            console.log('View history for user:', userId);
        }

        function addFine(borrowId) {
            // Implement add fine functionality
            console.log('Add fine for borrow:', borrowId);
            var amount = prompt('Nhập số tiền phạt (VND):');
            if (amount) {
                alert('Đã thêm phạt ' + amount + ' VND');
            }
        }
    </script>
}