@model ELibraryManagement.Web.Services.FineDetailViewModel
@using ELibraryManagement.Web.Models
@{
    if (Model == null)
    {
        <div class="modal-header">
            <h5 class="modal-title">Lỗi</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <div class="alert alert-danger">
                <i class="fas fa-exclamation-triangle"></i>
                Không thể tải thông tin phạt
            </div>
        </div>
        return;
    }
}

<div class="modal-header">
    <h5 class="modal-title">
        <i class="fas fa-money-bill-wave"></i>
        Chi tiết phạt #@Model.Id
    </h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

<div class="modal-body">
    <div class="row">
        <!-- Basic Info -->
        <div class="col-md-6">
            <div class="card border-left-primary h-100">
                <div class="card-body">
                    <h6 class="card-title text-primary">
                        <i class="fas fa-info-circle"></i>
                        Thông tin cơ bản
                    </h6>
                    
                    <dl class="row">
                        <dt class="col-sm-4">Mã phạt:</dt>
                        <dd class="col-sm-8">#@Model.Id</dd>
                        
                        <dt class="col-sm-4">Sinh viên:</dt>
                        <dd class="col-sm-8">
                            <strong>@Model.UserFullName</strong><br>
                            <small class="text-muted">@Model.UserEmail</small>
                        </dd>
                        
                        <dt class="col-sm-4">Số tiền:</dt>
                        <dd class="col-sm-8">
                            <span class="h5 text-danger">@Model.Amount.ToString("N0") VND</span>
                        </dd>
                        
                        <dt class="col-sm-4">Trạng thái:</dt>
                        <dd class="col-sm-8">
                            @{ 
                                // Use high-contrast bg/text classes so badge is readable on white background
                                var statusClass = Model.Status switch
                                {
                                    "Pending" => Model.IsOverdue ? "bg-danger text-white" : "bg-warning text-dark",
                                    "Paid" => "bg-success text-white",
                                    "Waived" => "bg-info text-dark",
                                    _ => "bg-secondary text-white"
                                };
                            }
                            <span class="badge @statusClass" style="font-size:0.95rem;">
                                @FineStatuses.GetDisplayName(Model.Status)
                            </span>
                            @if (Model.IsOverdue)
                            {
                                <br><small class="text-danger">
                                    <i class="fas fa-exclamation-triangle"></i> Quá hạn
                                </small>
                            }
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        <!-- Date Info -->
        <div class="col-md-6">
            <div class="card border-left-info h-100">
                <div class="card-body">
                    <h6 class="card-title text-info">
                        <i class="fas fa-calendar"></i>
                        Thông tin thời gian
                    </h6>
                    
                    <dl class="row">
                        <dt class="col-sm-5">Ngày tạo:</dt>
                        <dd class="col-sm-7">@Model.FineDate.ToString("dd/MM/yyyy HH:mm")</dd>
                        
                        <dt class="col-sm-5">Hạn thanh toán:</dt>
                        <dd class="col-sm-7">
                            @if (Model.DueDate.HasValue)
                            {
                                <span class="@(Model.IsOverdue ? "text-danger" : "")">
                                    @Model.DueDate.Value.ToString("dd/MM/yyyy")
                                </span>
                            }
                            else
                            {
                                <span class="text-muted">Không giới hạn</span>
                            }
                        </dd>
                        
                        @if (Model.PaidDate.HasValue)
                        {
                            <dt class="col-sm-5">Ngày thanh toán:</dt>
                            <dd class="col-sm-7 text-success">@Model.PaidDate.Value.ToString("dd/MM/yyyy HH:mm")</dd>
                        }
                        
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <dt class="col-sm-5">Cập nhật cuối:</dt>
                            <dd class="col-sm-7">@Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</dd>
                        }
                        
                        <dt class="col-sm-5">Số lần nhắc:</dt>
                        <dd class="col-sm-7">
                            @{ var reminderClass = Model.ReminderCount > 0 ? "bg-danger text-white" : "bg-secondary text-white"; }
                            <span class="badge @reminderClass">@Model.ReminderCount lần</span>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Related Book Info -->
    @if (!string.IsNullOrEmpty(Model.BookTitle))
    {
        <div class="row mt-3">
            <div class="col-12">
                <div class="card border-left-success">
                    <div class="card-body">
                        <h6 class="card-title text-success">
                            <i class="fas fa-book"></i>
                            Sách liên quan
                        </h6>
                        <p class="mb-1">
                            <strong>@Model.BookTitle</strong>
                            @if (!string.IsNullOrEmpty(Model.BookAuthor))
                            {
                                <br><small class="text-muted">Tác giả: @Model.BookAuthor</small>
                            }
                        </p>
                        @if (Model.BorrowRecordId.HasValue)
                        {
                            <small class="text-muted">Mã mượn: #@Model.BorrowRecordId</small>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Reason and Description -->
    <div class="row mt-3">
        <div class="col-12">
            <div class="card border-left-warning">
                <div class="card-body">
                    <h6 class="card-title text-warning">
                        <i class="fas fa-exclamation-circle"></i>
                        Lý do và mô tả
                    </h6>
                    <dl class="row">
                        <dt class="col-sm-2">Lý do:</dt>
                        <dd class="col-sm-10"><strong>@Model.Reason</strong></dd>
                        
                        @if (!string.IsNullOrEmpty(Model.Description))
                        {
                            <dt class="col-sm-2">Mô tả:</dt>
                            <dd class="col-sm-10">@Model.Description</dd>
                        }
                        
                        @if (!string.IsNullOrEmpty(Model.EscalationReason))
                        {
                            <dt class="col-sm-2">Lý do chuyển lên:</dt>
                            <dd class="col-sm-10 text-danger">@Model.EscalationReason</dd>
                        }
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <!-- Action History -->
    @if (Model.ActionHistory.Any())
    {
        <div class="row mt-3">
            <div class="col-12">
                <div class="card border-left-dark">
                    <div class="card-body">
                        <h6 class="card-title text-dark">
                            <i class="fas fa-history"></i>
                            Lịch sử thao tác
                        </h6>
                        <div class="timeline">
                            @foreach (var action in Model.ActionHistory)
                            {
                                <div class="timeline-item">
                                    <div class="timeline-marker">
                                        @{
                                            var actionIcon = action.ActionType switch
                                            {
                                                "PaymentReceived" => "fas fa-money-bill text-success",
                                                "FineWaived" => "fas fa-hand-holding text-info",
                                                "ReminderSent" => "fas fa-bell text-warning",
                                                "Escalated" => "fas fa-arrow-up text-danger",
                                                _ => "fas fa-circle text-secondary"
                                            };
                                        }
                                        <i class="@actionIcon"></i>
                                    </div>
                                    <div class="timeline-content">
                                        <div class="d-flex justify-content-between">
                                            <strong>@FineActionTypes.GetDisplayName(action.ActionType)</strong>
                                            <small class="text-muted">@action.ActionDate.ToString("dd/MM/yyyy HH:mm")</small>
                                        </div>
                                        <p class="mb-1">@action.Description</p>
                                        @if (action.Amount.HasValue)
                                        {
                                            <small class="text-info">Số tiền: @action.Amount.Value.ToString("N0") VND</small>
                                        }
                                        @if (!string.IsNullOrEmpty(action.Notes))
                                        {
                                            <br><small class="text-muted">Ghi chú: @action.Notes</small>
                                        }
                                        <div class="text-muted">
                                            <small>Thực hiện bởi: @action.UserFullName</small>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="modal-footer">
    @if (Model.Status == "Pending")
    {
        <button type="button" class="btn btn-success" onclick="markAsPaidFromModal(@Model.Id, '@Model.UserFullName')">
            <i class="fas fa-money-bill"></i>
            Đánh dấu đã thanh toán
        </button>
    }
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
        <i class="fas fa-times"></i>
        Đóng
    </button>
</div>

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 1px solid #e3e6f0;
    }

    .timeline-item:last-child {
        border-bottom: none;
    }

    .timeline-marker {
        position: absolute;
        left: -35px;
        top: 5px;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: white;
        border: 2px solid #e3e6f0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 10px;
    }

    .timeline-content {
        padding-left: 10px;
    }

    .timeline::before {
        content: '';
        position: absolute;
        left: -26px;
        top: 0;
        bottom: 0;
        width: 2px;
        background: #e3e6f0;
    }
</style>

<script>
    function markAsPaidFromModal(fineId, userName) {
        $('#fineDetailModal').modal('hide');
        markAsPaid(fineId, userName);
    }

    // waiveFineFromModal removed - waive functionality intentionally disabled in UI
</script>