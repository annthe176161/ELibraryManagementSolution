@model List<ELibraryManagement.Web.Models.UserBorrowedBookViewModel>
@{
    ViewData["Title"] = "Sách đã mượn";
}

@section Styles {
    <link rel="stylesheet" href="~/css/my-books.css" />
}

<div class="my-books-container">
    <div class="container py-5">
        <div class="page-header">
            <h2>
                <i class="fas fa-book-reader me-2"></i>
                Sách đã mượn
            </h2>
            <p class="text-muted">Quản lý danh sách sách bạn đã mượn</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["ShowReviewOption"] as bool? == true)
        {
            <div class="alert alert-info alert-dismissible fade show review-prompt" role="alert">
                <div class="d-flex align-items-center justify-content-between">
                    <div>
                        <i class="fas fa-star me-2"></i>
                        <strong>Bạn vừa trả sách thành công!</strong>
                        <br>
                        <small>Hãy chia sẻ trải nghiệm của bạn về cuốn sách "@TempData["ReturnedBookTitle"]" để giúp các bạn khác.</small>
                    </div>
                    <div class="ms-3">
                        <a asp-controller="Review" 
                           asp-action="Create" 
                           asp-route-bookId="@TempData["ReturnedBookId"]" 
                           asp-route-borrowRecordId="@TempData["BorrowRecordId"]"
                           class="btn btn-primary btn-sm">
                            <i class="fas fa-star me-1"></i>Viết Đánh Giá
                        </a>
                    </div>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        }

        @if (Model.Any())
        {
            <!-- Filter Tabs -->
            <div class="filter-tabs mb-4">
                <ul class="nav nav-pills" id="statusFilter" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="all-tab" data-bs-toggle="pill" data-bs-target="#all"
                            type="button" role="tab">
                            <i class="fas fa-list me-1"></i>
                            Tất cả (@Model.Count)
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="borrowed-tab" data-bs-toggle="pill" data-bs-target="#borrowed"
                            type="button" role="tab">
                            <i class="fas fa-book-open me-1"></i>
                            Đang mượn (@Model.Count(b => b.ReturnDate == null))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="returned-tab" data-bs-toggle="pill" data-bs-target="#returned"
                            type="button" role="tab">
                            <i class="fas fa-check-circle me-1"></i>
                            Đã trả (@Model.Count(b => b.ReturnDate != null))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="overdue-tab" data-bs-toggle="pill" data-bs-target="#overdue"
                            type="button" role="tab">
                            <i class="fas fa-exclamation-triangle me-1"></i>
                            Quá hạn (@Model.Count(b => b.IsOverdue))
                        </button>
                    </li>
                </ul>
            </div>

            <!-- Books List -->
            <div class="tab-content" id="statusFilterContent">
                <div class="tab-pane fade show active" id="all" role="tabpanel">
                    @await Html.PartialAsync("_BorrowedBooksList", Model)
                </div>
                <div class="tab-pane fade" id="borrowed" role="tabpanel">
                    @await Html.PartialAsync("_BorrowedBooksList", Model.Where(b => b.ReturnDate == null).ToList())
                </div>
                <div class="tab-pane fade" id="returned" role="tabpanel">
                    @await Html.PartialAsync("_BorrowedBooksList", Model.Where(b => b.ReturnDate != null).ToList())
                </div>
                <div class="tab-pane fade" id="overdue" role="tabpanel">
                    @await Html.PartialAsync("_BorrowedBooksList", Model.Where(b => b.IsOverdue).ToList())
                </div>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="text-center py-5">
                    <i class="fas fa-book fa-5x text-muted mb-3"></i>
                    <h4 class="text-muted">Chưa có sách nào được mượn</h4>
                    <p class="text-muted mb-4">Khám phá thư viện để tìm những cuốn sách thú vị!</p>
                    <a asp-controller="Home" asp-action="Index" class="btn btn-primary btn-lg">
                        <i class="fas fa-search me-2"></i>
                        Khám phá thư viện
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function confirmReturn(borrowRecordId, bookTitle) {
            if (confirm(`Bạn có chắc chắn muốn trả sách "${bookTitle}"?`)) {
                document.getElementById('returnForm_' + borrowRecordId).submit();
            }
        }
    </script>
}
