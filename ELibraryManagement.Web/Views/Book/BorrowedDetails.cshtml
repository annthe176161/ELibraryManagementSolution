@model ELibraryManagement.Web.Models.BorrowedBookDetailViewModel
@{
    ViewData["Title"] = $"{Model.BookDetails.Title} - Chi Tiết Sách Đã Mượn";
}

@section Styles {
    <link rel="stylesheet" href="~/css/borrowed-book-detail.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@300;400;500;600;700&display=swap"
        rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* FPT University Theme Styles */
        .fpt-header {
            background: linear-gradient(135deg, #1e3a8a 0%, #3b82f6 50%, #60a5fa 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            border-radius: 1rem;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            position: relative;
            overflow: hidden;
        }

        .fpt-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="books" patternUnits="userSpaceOnUse" width="20" height="20"><rect width="20" height="20" fill="none"/><rect x="2" y="8" width="3" height="8" fill="white" opacity="0.05"/><rect x="6" y="6" width="3" height="10" fill="white" opacity="0.05"/><rect x="10" y="7" width="3" height="9" fill="white" opacity="0.05"/><rect x="14" y="5" width="3" height="11" fill="white" opacity="0.05"/></pattern></defs><rect width="100" height="100" fill="url(%23books)"/></svg>') repeat;
            pointer-events: none;
        }

        .fpt-title {
            position: relative;
            z-index: 1;
        }

        .fpt-title h1 {
            font-size: 2.5rem;
            font-weight: 700;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
            margin-bottom: 0.5rem;
        }

        .fpt-title h2 {
            font-size: 1.2rem;
            opacity: 0.9;
            font-weight: 300;
        }

        .book-stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            border: none;
            transition: all 0.3s ease;
            text-align: center;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: #1e3a8a;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            font-size: 0.875rem;
            color: #6b7280;
            font-weight: 500;
        }

        .progress-ring {
            position: relative;
            width: 80px;
            height: 80px;
            margin: 0 auto 1rem;
        }

        .progress-ring circle {
            fill: none;
            stroke-width: 8;
            transform: rotate(-90deg);
            transform-origin: 50% 50%;
        }

        .progress-ring-bg {
            stroke: #e5e7eb;
        }

        .progress-ring-fill {
            stroke: #1e3a8a;
            stroke-dasharray: 220;
            stroke-dashoffset: 220;
            transition: stroke-dashoffset 1s ease;
        }
    </style>
}

<!-- FPT University Header -->
<div class="fpt-header">
    <div class="container">
        <div class="row align-items-center">
            <div class="col-md-8">
                <div class="fpt-title">
                    <h1>
                        <i class="fas fa-university me-3"></i>
                        Thư viện trường đại học
                    </h1>
                    <h2>
                        <i class="fas fa-book-reader me-2"></i>
                        Chi Tiết Sách Đã Mượn
                    </h2>
                </div>
            </div>
            <div class="col-md-4 text-end">
                <div class="book-quick-info">
                    <h4 class="mb-1">@Model.BookDetails.Title</h4>
                    <p class="mb-0 opacity-75">@Model.BookDetails.Author</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Breadcrumb Navigation -->
<nav aria-label="breadcrumb" class="breadcrumb-nav">
    <div class="container">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Home")">
                    <i class="fas fa-home me-1"></i>Trang Chủ
                </a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("MyBooks", "Book")">
                    <i class="fas fa-book-reader me-1"></i>Sách Đã Mượn
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@Model.BookDetails.Title</li>
        </ol>
    </div>
</nav>

<!-- Main Content -->
<div class="container borrowed-book-detail-container">
    <div class="row">
        <!-- Book Information -->
        <div class="col-lg-4 mb-4">
            <div class="book-info-card">
                <div class="book-cover-section">
                    <img src="@Model.BorrowRecord.BookCoverUrl" alt="@Model.BookDetails.Title" class="book-cover"
                        onerror="this.src='/images/default-book-cover.jpg'">

                    <!-- Status Badge -->
                    <div class="status-overlay">
                        @if (Model.BorrowRecord.Status == "Returned" && Model.BorrowRecord.ReturnDate.HasValue)
                        {
                            <span class="status-badge returned">
                                <i class="fas fa-check-circle me-1"></i>
                                Đã trả
                            </span>
                        }
                        else if (Model.BorrowRecord.Status == "Cancelled")
                        {
                            <span class="status-badge returned" style="background-color: #6b7280;">
                                <i class="fas fa-times-circle me-1"></i>
                                Đã hủy
                            </span>
                        }
                        else if (Model.BorrowRecord.Status == "Requested")
                        {
                            <span class="status-badge borrowed" style="background-color: #4caf50;">
                                <i class="fas fa-check-circle me-1"></i>
                                Đã đăng ký
                            </span>
                        }
                        else if (Model.BorrowRecord.IsOverdue)
                        {
                            <span class="status-badge overdue">
                                <i class="fas fa-exclamation-triangle me-1"></i>
                                Quá hạn
                            </span>
                        }
                        else
                        {
                            <span class="status-badge borrowed">
                                <i class="fas fa-book-open me-1"></i>
                                Đang mượn
                            </span>
                        }
                    </div>
                </div>

                <div class="book-basic-info">
                    <h3 class="book-title">@Model.BookDetails.Title</h3>
                    <p class="book-author">
                        <i class="fas fa-user me-1"></i>
                        @Model.BookDetails.Author
                    </p>
                    <p class="book-publisher">
                        <i class="fas fa-building me-1"></i>
                        @Model.BookDetails.Publisher (@Model.BookDetails.PublicationYear)
                    </p>
                    @if (!string.IsNullOrEmpty(Model.BookDetails.ISBN))
                    {
                        <p class="book-isbn">
                            <i class="fas fa-barcode me-1"></i>
                            ISBN: @Model.BookDetails.ISBN
                        </p>
                    }
                    @if (!string.IsNullOrEmpty(Model.BookDetails.CategoryName))
                    {
                        <p class="book-category">
                            <i class="fas fa-tag me-1"></i>
                            Thể loại: @Model.BookDetails.CategoryName
                        </p>
                    }
                    @if (!string.IsNullOrEmpty(Model.BookDetails.Language))
                    {
                        <p class="book-language">
                            <i class="fas fa-language me-1"></i>
                            Ngôn ngữ: @Model.BookDetails.Language
                        </p>
                    }
                    @if (Model.BookDetails.PageCount > 0)
                    {
                        <p class="book-pages">
                            <i class="fas fa-file-alt me-1"></i>
                            @Model.BookDetails.PageCount trang
                        </p>
                    }
                </div>
            </div>
        </div>

        <!-- Detailed Information -->
        <div class="col-lg-8">
            <!-- Book Statistics -->
            <div class="book-stats-section mb-4">
                <h4 class="section-title">
                    <i class="fas fa-chart-bar me-2"></i>
                    Thống Kê Sách
                </h4>

                <div class="book-stats-grid">
                    <div class="stat-card">
                        <div class="progress-ring">
                            <svg width="80" height="80">
                                <circle class="progress-ring-bg" cx="40" cy="40" r="35"></circle>
                                <circle class="progress-ring-fill" cx="40" cy="40" r="35"
                                    style="stroke-dashoffset: @(220 - (Model.BookDetails.AvailableCopies * 220 / Model.BookDetails.TotalCopies))">
                                </circle>
                            </svg>
                        </div>
                        <div class="stat-value">@Model.BookDetails.AvailableCopies/@Model.BookDetails.TotalCopies</div>
                        <div class="stat-label">Sách có sẵn</div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-value">@Model.BookDetails.TotalCopies</div>
                        <div class="stat-label">Tổng số bản</div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-value">@(Model.BookDetails.TotalCopies - Model.BookDetails.AvailableCopies)
                        </div>
                        <div class="stat-label">Đang được mượn</div>
                    </div>

                    @if (Model.BookDetails.RatingCount > 0)
                    {
                        <div class="stat-card">
                            <div class="stat-value">@Model.BookDetails.AverageRating.ToString("0.0") ⭐</div>
                            <div class="stat-label">@Model.BookDetails.RatingCount đánh giá</div>
                        </div>
                    }
                </div>
            </div>

            <!-- Borrowing Information -->
            <div class="borrowing-info-section mb-4">
                <h4 class="section-title">
                    <i class="fas fa-info-circle me-2"></i>
                    Thông Tin Mượn Sách Chi Tiết
                </h4>

                <div class="borrow-details-grid">
                    <div class="detail-item">
                        <div class="detail-label">
                            <i class="fas fa-calendar-plus text-primary"></i>
                            @if (Model.BorrowRecord.Status == "Requested")
                            {
                                <text>Ngày yêu cầu</text>
                            }
                            else
                            {
                                <text>Ngày mượn</text>
                            }
                        </div>
                        <div class="detail-value">@Model.BorrowRecord.BorrowDate.ToString("dd/MM/yyyy HH:mm")</div>
                    </div>

                    @if (Model.BorrowRecord.Status != "Requested")
                    {
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-calendar-check text-warning"></i>
                                Hạn trả
                            </div>
                            <div class="detail-value">@Model.BorrowRecord.DueDate.ToString("dd/MM/yyyy")</div>
                        </div>
                    }
                    else
                    {
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-check-circle text-success"></i>
                                Trạng thái
                            </div>
                            <div class="detail-value">
                                <span class="badge bg-success">
                                    <i class="fas fa-check-circle me-1"></i>
                                    Đã đăng ký
                                </span>
                            </div>
                        </div>
                    }

                    @if (Model.BorrowRecord.ReturnDate.HasValue)
                    {
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-calendar-check text-success"></i>
                                Ngày trả thực tế
                            </div>
                            <div class="detail-value">@Model.BorrowRecord.ReturnDate.Value.ToString("dd/MM/yyyy HH:mm")
                            </div>
                        </div>
                    }

                    @if (Model.BorrowRecord.Status != "Requested")
                    {
                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-clock text-info"></i>
                                Thời gian mượn
                            </div>
                            <div class="detail-value">
                                @{
                                    var borrowDuration = Model.BorrowRecord.ReturnDate.HasValue
                                    ? (Model.BorrowRecord.ReturnDate.Value - Model.BorrowRecord.BorrowDate).Days
                                    : (DateTime.Now - Model.BorrowRecord.BorrowDate).Days;
                                }
                                @borrowDuration ngày
                            </div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label">
                                <i class="fas fa-hourglass-half text-secondary"></i>
                                Còn lại
                            </div>
                            <div class="detail-value">
                                @if (Model.BorrowRecord.ReturnDate.HasValue)
                                {
                                    <span class="text-muted">Đã trả</span>
                                }
                                else if (Model.BorrowRecord.IsOverdue)
                                {
                                    <span class="text-danger">Quá hạn @Model.BorrowRecord.DaysOverdue ngày</span>
                                }
                                else
                                {
                                    var daysLeft = (Model.BorrowRecord.DueDate - DateTime.Now).Days;
                                    <span class="text-success">@daysLeft ngày</span>
                                }
                            </div>
                        </div>
                    }

                    <div class="detail-item">
                        <div class="detail-label">
                            <i class="fas fa-id-card text-primary"></i>
                            Mã mượn sách
                        </div>
                        <div class="detail-value">#@Model.BorrowRecord.BorrowRecordId</div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.BorrowRecord.Notes))
                    {
                        <div class="detail-item full-width">
                            <div class="detail-label">
                                <i class="fas fa-sticky-note text-secondary"></i>
                                Ghi chú
                            </div>
                            <div class="detail-value">@Model.BorrowRecord.Notes</div>
                        </div>
                    }
                </div>
            </div>

            <!-- User Borrowing Statistics -->
            <div class="user-stats-section mb-4">
                <h4 class="section-title">
                    <i class="fas fa-user-graduate me-2"></i>
                    Thống Kê Cá Nhân
                </h4>

                <div class="user-stats-grid">
                    <div class="stat-card">
                        <div class="stat-value">
                            @ViewBag.CurrentActiveBorrows
                        </div>
                        <div class="stat-label">Sách đang mượn</div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-value">
                            @ViewBag.TotalBorrowed
                        </div>
                        <div class="stat-label">Tổng đã mượn</div>
                    </div>

                    <div class="stat-card">
                        <div class="stat-value">
                            @{
                                var overdueCount = 0; // Placeholder - cần API để lấy số liệu thực
                            }
                            @overdueCount
                        </div>
                        <div class="stat-label">Lần quá hạn</div>
                    </div>

                </div>
            </div>

            <!-- Enhanced Timeline -->
            <div class="timeline-section mb-4">
                <h4 class="section-title">
                    <i class="fas fa-history me-2"></i>
                    Lịch Sử Mượn Trả Chi Tiết
                </h4>

                <div class="borrow-timeline">
                    <div class="timeline-item completed">
                        <div class="timeline-dot"></div>
                        <div class="timeline-content">
                            <h6>
                                <i class="fas fa-book-open me-2"></i>
                                @if (Model.BorrowRecord.Status == "Requested")
                                {
                                    <text>Yêu cầu mượn sách</text>
                                }
                                else
                                {
                                    <text>Mượn sách thành công</text>
                                }
                            </h6>
                            <small class="text-muted">
                                <i class="fas fa-calendar me-1"></i>
                                @Model.BorrowRecord.BorrowDate.ToString("dd/MM/yyyy HH:mm")
                            </small>
                            <p class="timeline-desc">
                                <i class="fas fa-info-circle me-1"></i>
                                @if (Model.BorrowRecord.Status == "Requested")
                                {
                                    <text>Yêu cầu mượn sách đã được xác nhận. Bạn có thể đến thư viện để nhận sách.</text>
                                }
                                else
                                {
                                    <text>Sách đã được mượn từ thư viện trường đại học</text>
                                }
                            </p>
                        </div>
                    </div>

                    @if (Model.BorrowRecord.Status == "Borrowed")
                    {
                        <div class="timeline-item completed">
                            <div class="timeline-dot"></div>
                            <div class="timeline-content">
                                <h6>
                                    <i class="fas fa-check-circle me-2"></i>
                                    Đã được phê duyệt
                                </h6>
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i>
                                    Yêu cầu đã được thủ thư phê duyệt
                                </small>
                                <p class="timeline-desc">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Sách đã sẵn sàng để mượn tại thư viện
                                </p>
                            </div>
                        </div>
                    }

                    @if (Model.BorrowRecord.ReturnDate.HasValue)
                    {
                        <div class="timeline-item completed">
                            <div class="timeline-dot"></div>
                            <div class="timeline-content">
                                <h6>
                                    <i class="fas fa-undo me-2"></i>
                                    Trả sách
                                </h6>
                                <small class="text-muted">
                                    <i class="fas fa-calendar me-1"></i>
                                    @Model.BorrowRecord.ReturnDate.Value.ToString("dd/MM/yyyy HH:mm")
                                </small>
                                <p class="timeline-desc">
                                    @if (Model.BorrowRecord.ReturnDate.Value <= Model.BorrowRecord.DueDate)
                                    {
                                        <span class="text-success">
                                            <i class="fas fa-check-circle me-1"></i>
                                            Trả đúng hạn
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">
                                            <i class="fas fa-exclamation-triangle me-1"></i>
                                            Trả trễ @((Model.BorrowRecord.ReturnDate.Value - Model.BorrowRecord.DueDate).Days)
                                            ngày
                                        </span>
                                    }
                                </p>
                            </div>
                        </div>
                    }
                    else
                    {
                        @* Nếu là Requested thì không hiển thị hạn trả, thay vào đó show hướng dẫn nhận sách *@
                        @if (Model.BorrowRecord.Status == "Requested")
                        {
                            <div class="timeline-item pending">
                                <div class="timeline-dot"></div>
                                <div class="timeline-content">
                                    <h6>
                                        <i class="fas fa-check-circle me-2 text-success"></i>
                                        Sẵn sàng nhận
                                    </h6>
                                    <small class="text-muted">
                                        <i class="fas fa-map-marker-alt me-1"></i>
                                        Đến thư viện để nhận sách
                                    </small>
                                    <p class="timeline-desc text-muted mt-2">
                                        <i class="fas fa-id-card me-1"></i>
                                        Mang theo thẻ sinh viên và thông báo với thủ thư
                                    </p>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="timeline-item @(Model.BorrowRecord.IsOverdue ? "overdue" : "pending")">
                                <div class="timeline-dot"></div>
                                <div class="timeline-content">
                                    <h6>
                                        <i class="fas fa-clock me-2"></i>
                                        Hạn trả sách
                                    </h6>
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        @Model.BorrowRecord.DueDate.ToString("dd/MM/yyyy")
                                    </small>
                                    <p class="timeline-desc">
                                        @if (Model.BorrowRecord.IsOverdue)
                                        {
                                            <span class="text-danger">
                                                <i class="fas fa-exclamation-triangle me-1"></i>
                                                Đã quá hạn @Model.BorrowRecord.DaysOverdue ngày
                                            </span>
                                        }
                                        else
                                        {
                                            var daysLeft = (Model.BorrowRecord.DueDate - DateTime.Now).Days;
                                            <span class="text-info">
                                                <i class="fas fa-hourglass-half me-1"></i>
                                                Còn @daysLeft ngày
                                            </span>
                                        }
                                    </p>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>

            @if (Model.BorrowRecord.Status == "Requested")
            {
                <!-- Request Status Guidance -->
                <div class="request-guidance-section mb-4">
                    <div class="alert alert-success border-0 shadow-sm"
                        style="background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%); border-left: 4px solid #4caf50;">
                        <div class="d-flex align-items-start">
                            <div class="me-3">
                                <i class="fas fa-check-circle fa-2x text-success"></i>
                            </div>
                            <div class="flex-grow-1">
                                <h5 class="alert-heading mb-2" style="color: #2e7d32;">
                                    <i class="fas fa-bookmark me-2"></i>
                                    Sách đã được đăng ký thành công
                                </h5>
                                <p class="mb-3" style="color: #424242; font-size: 0.95rem;">
                                    Yêu cầu mượn sách của bạn đã được xác nhận. Bạn có thể đến thư viện để nhận sách ngay
                                    bây giờ.
                                </p>
                                <div class="guidance-steps">
                                    <h6 class="mb-2" style="color: #2e7d32;">
                                        <i class="fas fa-list-check me-2"></i>
                                        Để nhận sách, vui lòng:
                                    </h6>
                                    <ul class="mb-0" style="color: #424242;">
                                        <li class="mb-1">
                                            <i class="fas fa-map-marker-alt text-primary me-2"></i>
                                            Đến thư viện trường đại học trong giờ mở cửa
                                        </li>
                                        <li class="mb-1">
                                            <i class="fas fa-id-card text-warning me-2"></i>
                                            Mang theo thẻ sinh viên để xác nhận danh tính
                                        </li>
                                        <li class="mb-1">
                                            <i class="fas fa-clock text-info me-2"></i>
                                            Giờ mở cửa: 7:00 - 18:00 các ngày trong tuần
                                        </li>
                                        <li class="mb-0">
                                            <i class="fas fa-user-check text-success me-2"></i>
                                            Thông báo cho thủ thư rằng bạn đã đăng ký mượn sách này
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Book Description -->
            @if (!string.IsNullOrEmpty(Model.BookDetails.Description))
            {
                <div class="book-description-section mb-4">
                    <h4 class="section-title">
                        <i class="fas fa-align-left me-2"></i>
                        Mô Tả Sách
                    </h4>
                    <div class="description-content">
                        @Model.BookDetails.Description
                    </div>
                </div>
            }

            <!-- Additional Information -->
            <div class="additional-info-section mb-4">
                <h4 class="section-title">
                    <i class="fas fa-info-circle me-2"></i>
                    Thông Tin Bổ Sung
                </h4>

                <div class="additional-info-grid">
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-shield-alt"></i>
                        </div>
                        <div class="info-content">
                            <h6>Chính sách mượn sách</h6>
                            <p>Sinh viên được mượn tối đa 5 quyển sách trong 30 ngày</p>
                        </div>
                    </div>

                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                        <div class="info-content">
                            <h6>Quy định quá hạn</h6>
                            <p>Phí phạt 5.000đ/ngày cho mỗi quyển sách quá hạn</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Enhanced Action Buttons -->
            <div class="action-buttons">
                <div class="action-buttons-grid">
                    <a href="@Url.Action("MyBooks", "Book")" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i>
                        Quay lại danh sách
                    </a>

                    @if (!Model.BorrowRecord.ReturnDate.HasValue && Model.BorrowRecord.Status != "Cancelled")
                    {
                        @if (Model.BorrowRecord.Status == "Requested")
                        {
                            <!-- Cancel Request button for pending requests -->
                            <form asp-controller="Book" asp-action="Cancel" asp-route-id="@Model.BorrowRecord.BorrowRecordId"
                                method="post" class="d-inline">
                                <button type="submit" class="btn btn-outline-danger"
                                    onclick="return confirm('Bạn có chắc chắn muốn hủy yêu cầu mượn sách này?')">
                                    <i class="fas fa-times me-2"></i>
                                    Hủy yêu cầu
                                </button>
                            </form>
                        }
                        else if (Model.BorrowRecord.Status == "Borrowed")
                        {
                            <!-- Info message for borrowed books -->
                            <div class="alert alert-info d-inline-block">
                                <i class="fas fa-info-circle me-2"></i>
                                Liên hệ thủ thư để trả sách
                            </div>
                        }
                    }

                    <a href="@Url.Action("BookDetail", "Home", new { id = Model.BookDetails.Id })"
                        class="btn btn-outline-primary">
                        <i class="fas fa-book me-2"></i>
                        Xem thông tin sách
                    </a>

                    <button class="btn btn-outline-info" onclick="printBorrowDetails()">
                        <i class="fas fa-print me-2"></i>
                        In phiếu mượn
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-refresh overdue information
        document.addEventListener('DOMContentLoaded', function () {
            // Add any interactive features here
            console.log('Borrowed book details page loaded');

            // Animate progress rings
            const progressRings = document.querySelectorAll('.progress-ring-fill');
            progressRings.forEach(ring => {
                const strokeDashoffset = ring.style.strokeDashoffset;
                ring.style.strokeDashoffset = '220';
                setTimeout(() => {
                    ring.style.strokeDashoffset = strokeDashoffset;
                }, 500);
            });
        });

        function printBorrowDetails() {
            window.print();
        }
    </script>
}