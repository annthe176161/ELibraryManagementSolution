using System.Net;
using System.Net.Mail;

namespace ELibraryManagement.Api.Services
{
    public class EmailService : IEmailService
    {
        private readonly IConfiguration _configuration;
        private readonly ILogger<EmailService> _logger;

        public EmailService(IConfiguration configuration, ILogger<EmailService> logger)
        {
            _configuration = configuration;
            _logger = logger;
        }

        public async Task<bool> SendEmailAsync(string toEmail, string subject, string body, bool isHtml = true)
        {
            try
            {
                var emailSettings = _configuration.GetSection("EmailSettings");

                var smtpClient = new SmtpClient(emailSettings["SmtpServer"])
                {
                    Port = int.Parse(emailSettings["SmtpPort"] ?? "587"),
                    Credentials = new NetworkCredential(
                        emailSettings["Username"],
                        emailSettings["Password"]
                    ),
                    EnableSsl = bool.Parse(emailSettings["EnableSsl"] ?? "true")
                };

                var mailMessage = new MailMessage
                {
                    From = new MailAddress(
                        emailSettings["FromEmail"] ?? emailSettings["Username"],
                        emailSettings["FromName"]
                    ),
                    Subject = subject,
                    Body = body,
                    IsBodyHtml = isHtml
                };

                mailMessage.To.Add(toEmail);

                await smtpClient.SendMailAsync(mailMessage);
                _logger.LogInformation($"Email sent successfully to {toEmail}");
                return true;
            }
            catch (Exception ex)
            {
                _logger.LogError(ex, $"Failed to send email to {toEmail}");
                return false;
            }
        }

        public async Task<bool> SendEmailConfirmationAsync(string email, string confirmationLink)
        {
            var subject = "X√°c nh·∫≠n t√†i kho·∫£n - ELibrary Management";
            var body = $@"
                <h2>Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi ELibrary Management System!</h2>
                <p>Vui l√≤ng x√°c nh·∫≠n ƒë·ªãa ch·ªâ email c·ªßa b·∫°n b·∫±ng c√°ch nh·∫•p v√†o li√™n k·∫øt b√™n d∆∞·ªõi:</p>
                <p><a href='{confirmationLink}' style='background-color: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>X√°c nh·∫≠n Email</a></p>
                <p>N·∫øu b·∫°n kh√¥ng th·ªÉ nh·∫•p v√†o li√™n k·∫øt, vui l√≤ng sao ch√©p v√† d√°n URL sau v√†o tr√¨nh duy·ªát:</p>
                <p>{confirmationLink}</p>
                <p>Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.</p>
                <br>
                <p>Tr√¢n tr·ªçng,</p>
                <p>ƒê·ªôi ng≈© ELibrary Management</p>
            ";

            return await SendEmailAsync(email, subject, body);
        }

        public async Task<bool> SendPasswordResetEmailAsync(string email, string resetLink)
        {
            var subject = "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - ELibrary Management";
            var body = $@"
                <h2>Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
                <p>Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i ELibrary Management System.</p>
                <p>Vui l√≤ng nh·∫•p v√†o li√™n k·∫øt b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
                <p><a href='{resetLink}' style='background-color: #dc3545; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;'>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</a></p>
                <p>N·∫øu b·∫°n kh√¥ng th·ªÉ nh·∫•p v√†o li√™n k·∫øt, vui l√≤ng sao ch√©p v√† d√°n URL sau v√†o tr√¨nh duy·ªát:</p>
                <p>{resetLink}</p>
                <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                <ul>
                    <li>Li√™n k·∫øt n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù</li>
                    <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                    <li>Kh√¥ng chia s·∫ª li√™n k·∫øt n√†y v·ªõi b·∫•t k·ª≥ ai kh√°c</li>
                </ul>
                <br>
                <p>Tr√¢n tr·ªçng,</p>
                <p>ƒê·ªôi ng≈© ELibrary Management</p>
            ";

            return await SendEmailAsync(email, subject, body);
        }

        public async Task<bool> SendBookDueReminderAsync(string email, string userName, string bookTitle, DateTime dueDate, int daysLeft, bool canExtend)
        {
            var subject = $"Nh·∫Øc nh·ªü tr·∫£ s√°ch - {bookTitle}";

            var extensionSection = canExtend
                ? $@"
                    <div style='background-color: #d4edda; border: 1px solid #c3e6cb; border-radius: 8px; padding: 20px; margin: 20px 0;'>
                        <h4 style='color: #155724; margin-top: 0;'>üí° B·∫°n c√≥ th·ªÉ gia h·∫°n s√°ch!</h4>
                        <p style='color: #155724; margin: 10px 0;'>N·∫øu c·∫ßn th√™m th·ªùi gian, b·∫°n c√≥ th·ªÉ gia h·∫°n s√°ch n√†y (t·ªëi ƒëa 2 l·∫ßn).</p>
                        <div style='text-align: center; margin: 15px 0;'>
                            <a href='https://localhost:7208/Borrow/MyBorrows' 
                               style='background-color: #28a745; color: white; padding: 10px 25px; text-decoration: none; border-radius: 20px; font-weight: bold; display: inline-block;'>
                                üîÑ Gia h·∫°n s√°ch ngay
                            </a>
                        </div>
                    </div>
                "
                : $@"
                    <div style='background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 8px; padding: 20px; margin: 20px 0;'>
                        <h4 style='color: #721c24; margin-top: 0;'>‚ö†Ô∏è Kh√¥ng th·ªÉ gia h·∫°n</h4>
                        <p style='color: #721c24; margin: 10px 0;'>S√°ch n√†y ƒë√£ ƒë·∫°t gi·ªõi h·∫°n gia h·∫°n (2 l·∫ßn) ho·∫∑c ƒë√£ qu√° h·∫°n. Vui l√≤ng tr·∫£ s√°ch ƒë√∫ng h·∫°n.</p>
                    </div>
                ";

            var urgencyColor = daysLeft <= 1 ? "#dc3545" : "#ffc107";
            var urgencyText = daysLeft <= 1 ? "KH·∫®N C·∫§P" : "TH√îNG B√ÅO";

            var body = $@"
                <div style='font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background-color: #f8f9fa; padding: 20px;'>
                    <div style='background-color: {urgencyColor}; color: white; text-align: center; padding: 15px; border-radius: 10px 10px 0 0;'>
                        <h2 style='margin: 0; font-size: 24px;'>üìö {urgencyText} TR·∫¢ S√ÅCH</h2>
                    </div>
                    
                    <div style='background-color: white; padding: 30px; border-radius: 0 0 10px 10px; border: 1px solid #ddd;'>
                        <h3 style='color: #333; margin-top: 0;'>Xin ch√†o {userName}!</h3>
                        
                        <div style='background-color: #f1f3f4; padding: 20px; border-radius: 8px; margin: 20px 0;'>
                            <h4 style='color: #333; margin-top: 0;'>üìñ Th√¥ng tin s√°ch:</h4>
                            <p style='margin: 5px 0;'><strong>T√™n s√°ch:</strong> {bookTitle}</p>
                            <p style='margin: 5px 0;'><strong>H·∫°n tr·∫£:</strong> <span style='color: {urgencyColor}; font-weight: bold;'>{dueDate:dd/MM/yyyy}</span></p>
                            <p style='margin: 5px 0;'><strong>Th·ªùi gian c√≤n l·∫°i:</strong> <span style='color: {urgencyColor}; font-weight: bold;'>{daysLeft} ng√†y</span></p>
                        </div>

                        {extensionSection}

                        <div style='background-color: #e3f2fd; padding: 15px; border-radius: 8px; margin: 20px 0;'>
                            <h4 style='color: #1976d2; margin-top: 0;'>üîî L∆∞u √Ω quan tr·ªçng:</h4>
                            <ul style='margin: 10px 0; padding-left: 20px;'>
                                <li>Vui l√≤ng tr·∫£ s√°ch ƒë√∫ng h·∫°n ƒë·ªÉ tr√°nh ph√≠ ph·∫°t</li>
                                <li>Ph√≠ ph·∫°t: 5,000 VND/ng√†y cho m·ªói ng√†y tr·ªÖ h·∫°n</li>
                                <li>S√°ch qu√° h·∫°n s·∫Ω ·∫£nh h∆∞·ªõng ƒë·∫øn kh·∫£ nƒÉng m∆∞·ª£n s√°ch trong t∆∞∆°ng lai</li>
                                <li>M·ªói sinh vi√™n ch·ªâ ƒë∆∞·ª£c gia h·∫°n t·ªëi ƒëa 2 l·∫ßn cho m·ªói cu·ªën s√°ch</li>
                            </ul>
                        </div>

                        <div style='text-align: center; margin: 30px 0;'>
                            <a href='https://localhost:7208/Borrow/MyBorrows' 
                               style='background-color: #007bff; color: white; padding: 12px 30px; text-decoration: none; border-radius: 25px; font-weight: bold; display: inline-block; margin: 5px;'>
                                üîç Xem danh s√°ch s√°ch ƒëang m∆∞·ª£n
                            </a>
                        </div>

                        <hr style='border: none; border-top: 1px solid #eee; margin: 30px 0;'>
                        
                        <p style='color: #666; font-size: 14px; text-align: center; margin: 20px 0;'>
                            Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng Th∆∞ vi·ªán ELibrary.<br>
                            N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá th·ªß th∆∞ ho·∫∑c tr·∫£ l·ªùi email n√†y.
                        </p>
                        
                        <div style='text-align: center; margin-top: 30px;'>
                            <p style='margin: 0; font-weight: bold; color: #333;'>Tr√¢n tr·ªçng,</p>
                            <p style='margin: 5px 0; color: #007bff; font-weight: bold;'>ƒê·ªôi ng≈© Th∆∞ vi·ªán ELibrary</p>
                        </div>
                    </div>
                </div>
            ";

            return await SendEmailAsync(email, subject, body);
        }
    }
}